#!/usr/bin/env ruby
require 'optparse'
require_relative '../lib/bullseye'

module Bullseye

  options = {}

  optparse = OptionParser.new do |opts|
    opts.banner = 'Usage: bullseye -p ~/Example.xcodeproj -t Example -e "Pods,KIF,etc"'

    options[:help] = nil
    opts.on('-h', '--help', 'Display this screen') do
      puts opts
      exit
    end

    options[:project] = nil
    opts.on('-p', '--project PROJECT', 'The XCode Project you would like to check') do |project|
      options[:project] = project
    end

    options[:target] = nil
    opts.on('-t', '--target TARGET', 'Specifies the app target\'s path') do |target|
      options[:target] = target
    end

    options[:exclude] = nil
    opts.on('-e', '--exclude [PATHS]', 'Excludes the specified paths from the search') do |paths|
      options[:exclude] = paths.split(',')
    end
  end

  optparse.parse!

  checker = Checker.new(options)
  @missing = checker.begin

  if @missing.count > 0
      puts "Found #{@missing.count} missing file(s)"
      puts @missing.join(", ")
      exit(1)
  else
	  puts "Everything is included in the target"
  end
end
